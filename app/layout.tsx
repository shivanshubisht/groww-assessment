import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google";

import "./globals.css";

import Image from "next/image";
import Link from "next/link";
import Script from "next/script";
import { CircleDollarSign, HomeIcon, ShoppingCartIcon } from "lucide-react";

import { merchantSchema } from "@/lib/schema";
import { cn } from "@/lib/utils";

const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const dynamic = "force-dynamic";

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const merchantDetails = await fetch(
    `https://groww-intern-assignment.vercel.app/v1/api/merchant-metadata`,
    { cache: "no-store" },
  );

  const merchantData = merchantSchema.parse(await merchantDetails.json());

  type Theme = keyof typeof merchantData.theme;

  const theme = Object.fromEntries(
    Object.entries(merchantData.theme).map(
      ([key, value]) => [`${key}-groww`, value] as const,
    ),
  );
  console.log(merchantData.theme);
  console.log(theme);
  // {
  //   '--background-groww': 'hsl(20, 14.3%, 4.1%)',
  //   '--foreground-groww': 'hsl(0, 0%, 95%)',
  //   '--primary-groww': 'hsl(142.1, 70.6%, 45.3%)',
  //   '--primary-foreground-groww': 'hsl(144.9, 80.4%, 10%)'
  // }

  return (
    <html lang="en" suppressHydrationWarning>
      <Script
        id="theme-style"
        async
        dangerouslySetInnerHTML={{
          __html: `
      const root = document.documentElement;
      const theme = ${JSON.stringify(theme)};
      Object.entries(theme).forEach(([key, value]) => {
        root.style.setProperty(\`\${key}\`, value);
      });
    `,
        }}
      />
      <body
        className={cn(
          "grid min-h-screen w-full bg-[var(--background-groww)] font-sans antialiased lg:grid-cols-[280px_1fr]",
          fontSans.variable,
        )}
      >
        <aside className="hidden border-r border-[var(--primary-groww)] lg:block dark:bg-[var(--background-groww)]">
          <div className="sticky top-0 flex flex-col gap-2">
            <div className="flex h-[60px] items-center border-b border-[var(--primary-groww)] px-6">
              <Link className="flex items-center gap-2 font-semibold" href="#">
                <Image
                  src={merchantData.merchantLogo}
                  alt="logo"
                  width="24"
                  height="24"
                />
                <span className="text-[var(--foreground-groww)]">
                  {merchantData.merchantName}
                </span>
              </Link>
            </div>
            <div className="flex-1 overflow-auto py-2">
              <nav className="grid items-start px-4 text-sm font-medium">
                <Link
                  className="flex items-center gap-3 rounded-lg px-3 py-2 text-[var(--foreground-groww)] transition-all hover:text-[var(--primary-foreground-groww)] dark:text-[var(--foreground-groww)] dark:hover:text-[var(--primary-foreground-groww)]"
                  href="#"
                >
                  <HomeIcon className="h-4 w-4" />
                  Home
                </Link>
                <Link
                  className="flex items-center gap-3 rounded-lg bg-[var(--primary-groww)] px-3 py-2 text-[var(--primary-foreground-groww)] transition-all hover:text-[var(--primary-foreground-groww)] dark:bg-[var(--primary-groww)] dark:text-[var(--primary-foreground-groww)] dark:hover:text-[var(--primary-foreground-groww)]"
                  href="/checkout"
                >
                  <ShoppingCartIcon className="h-4 w-4" />
                  Checkout
                </Link>
                <Link
                  className="flex items-center gap-3 rounded-lg px-3 py-2 text-[var(--foreground-groww)] transition-all hover:text-[var(--primary-foreground-groww)] dark:text-[var(--foreground-groww)] dark:hover:text-[var(--primary-foreground-groww)]"
                  href="#"
                >
                  <CircleDollarSign className="h-4 w-4" />
                  Payments
                </Link>
              </nav>
            </div>
          </div>
        </aside>
        <div className="relative flex min-h-screen flex-col">
          <header className="sticky top-0 flex h-14 items-center gap-4 border-b border-[var(--primary-groww)] bg-[var(--background-groww)] px-6 backdrop-blur-md lg:h-[60px] dark:bg-[var(--background-groww)]">
            <Link className="lg:hidden" href="#">
              <Image
                src={merchantData.merchantLogo}
                alt="logo"
                width="24"
                height="24"
              />
              <span className="sr-only">{merchantData.merchantName}</span>
            </Link>
          </header>
          <main className="flex flex-1 flex-col gap-4 overflow-auto p-4 md:gap-8 md:p-6">
            {children}
          </main>
        </div>
      </body>
    </html>
  );
}
